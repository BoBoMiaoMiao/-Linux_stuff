cd: #切换目录(相对路径或绝对路径)
    # ..返回上一层   .返回当前层
    
pwd -P  显示当前路径，而非使用连接link路径

mkdir -m  直接配置目录的权限
      -p  帮助直接将所需要的目录，递归创建起来

rmdir -p  连同上层"空的"目录一起删除

ls:
   -a   全部文件，连同隐藏档(.开头的文件)一起列出
   -A   全部文件，两桶隐藏档，但不包括.和..两个目录
   -d   仅列出目录本身，而不是列出目录内的文件数据
   -f   直接列出结果，不进行排序(ls默认以档名排序)
   -F   根据文件/目录等，给予附加数据结构：
        *：可运行档
        /：代表目录
        =：代表socket文件
        |：代表FIFO文件
   -h   将文件容量以人类较易读的方式(例如 GB, KB 等等)列出来；
   -i   列出 inode 号码，inode 的意义下一章将会介绍；
   -l   长数据串列出，包含文件的属性与权限等等数据；(常用)
   -n   列出 UID 与 GID 而非使用者与群组的名称 (UID 与 GID 会在帐号管理提到！)
   -r   将排序结果反向输出，例如：原本档名由小到大，反向则为由大到小；
   -R   连同子目录内容一起列出来，等于该目录下的所有文件都会显示出来；
   -S   以文件容量大小排序，而不是用档名排序；
   -t   依时间排序，而不是用档名。
--color=never ：不要依据文件特性给予颜色显示；
--color=always ：显示颜色
--color=auto ：让系统自行依据配置来判断是否给予颜色
--full-time ：以完整时间模式 (包含年、月、日、时、分) 输出
--time={atime,ctime} ：输出 access 时间或改变权限属性时间 (ctime),而非内容变更时间(modification time)

cp: #1)源文件所在需要具有的权限 RX 2)目的文件所在目录需要 WX 权限 3)在权限不足的情况下即使-a 也无法更改文件属性
   -a   相当于-pdr
   -d   若源文件为链接文件的属性，则复制链接文件属性而非文件本身
   -f   若目标文件已经存在且无法复制，则删除后在尝试一次
   -i   若目标文件已经存在时，在覆盖是会先询问操作的进行
   -l   进行硬链接
   -p   连同文件的属性一起复制
   -r   递归持续复制
   -s   复制成符号链接文件
   -u   若目标文件比源文件旧才更新
   
rm: #删除
   -f   强制模式，不会进行询问
   -i   互动模式
   -r   递归删除
   
mv: #移动/重命名文件与目录
   -f /  -i /  -u(若目标文件已经存在，且源文件比较新才会更新)
   
